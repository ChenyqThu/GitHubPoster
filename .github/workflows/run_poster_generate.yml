name: Run Poster Generate

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

env:
  # please change to your own config.
  # this actions generate only this year
  # If you fork this please change the type to yours below
  TYPE: "notiondata, weread, duolingo" # support strava/gpx/ns/cichang/shanbay/duolingo/issue/leetcode/github/gitlab/kindle/bilibili/wakatime/dota2/forest, Please change the 'pass' it to your own separated by commas
  ME: LucienChen

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # from https://github.com/pdm-project/pdm/blob/main/.github/workflows/ci.yml
      - name: Set Variables
        id: set_variables
        shell: bash
        run: |
          echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_OUTPUT
          echo "PIP_CACHE=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Cache PIP
        uses: actions/cache@v3
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: ${{ runner.os }}-pip-${{ steps.set_variables.outputs.PY }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        if: steps.pip-cache.outputs.cache-hit != 'true'

      - name: Run sync duolingo script
        if: contains(env.TYPE, 'duolingo')
        run: |
          python cli.py --type duolingo --duolingo_user_name ${{ secrets.DUOLINGO_USER_NAME }} --duolingo_jwt ${{ secrets.DUOLINGO_JWT }} --me "英语学习统计 @ Duolingo" --track-color=#6495ED --special-color1=#0000CD --special-color2=#0000FF --with-animation --with-statistics --animation-time 10 --without-type-name --dom-color=#EBEDF0 --text-color=#000000 --background-color=#ffffff

      - name: Run sync weread script
        if: contains(env.TYPE, 'weread')
        run: |
          python cli.py --type weread --weread_cookie ${{ secrets.WEREAD_COOKIE }} --me "读书时长统计 @ 微信读书" --track-color=#ACE7AE --special-color1=#69C16E --special-color2=#549F57 --with-animation --with-statistics --animation-time 10 --without-type-name --dom-color=#EBEDF0 --text-color=#000000 --background-color=#ffffff
          
      - name: Run sync NotionData script
        if: contains(env.TYPE, 'notiondata')
        run: |
          python cli.py --type notiondata --notiondata_token ${{ secrets.NOTION_TOKEN }} --notion_database_id ${{ secrets.NOTION_DATABASE_ID}} --notion_date_name "日期" --notion_prop_name "工作时长" --notion_filter "类型#每日记录" --me "工作时长统计 @ Notion" --track-color=#FDD1CE --special-color1=#FD756C --special-color2=#FD473A --with-animation --with-statistics --animation-time 10 --without-type-name --dom-color=#EBEDF0 --text-color=#000000 --background-color=#ffffff

      - name: Push new postger
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m 'update new poster' || echo "nothing to commit"
          git push || echo "nothing to push"
